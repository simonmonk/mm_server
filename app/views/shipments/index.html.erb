<h1>Orders</h1>

<div id="app">

<div>

<div>
  <button type="button" v-on:click="new_shipment_1" class="btn btn-primary">Create New Order</button>
</div>

<span>
  <span class="menu" v-bind:class="{ menu_selected: filter_by_type == 'is_new'}" v-on:click="filter_shipments('is_new')">New Orders (Un-shipped)</span>
  <span class="menu" v-bind:class="{ menu_selected: filter_by_type == 'is_unpaid'}" v-on:click="filter_shipments('is_unpaid')">Unpaid Orders</span>
  <span class="menu" v-bind:class="{ menu_selected: filter_by_type == 'is_paid'}" v-on:click="filter_shipments('is_paid')">Paid (Complete)</span>
  <span class="menu" v-bind:class="{ menu_selected: filter_by_type == 'is_cancelled'}" v-on:click="filter_shipments('is_cancelled')">Cancelled</span>
</span>

<span>
Modified in last   
<select v-model="num_days" v-on:change="num_days_changed">
      <option value="7">7</option>
      <option value="14">14</option>
      <option value="30">30</option>
      <option value="90">90</option>
      <option value="365">365</option>
      <option value="100000">ALL</option>
</select>
days.
</span>
<span>
Sort by:   
<select v-model="sort_by_field">
      <option value="updated_at">Most recently changed or added</option>
      <option value="date_order_received">Date order received</option>
      <option value="date_invoice_sent">Date of Invoice</option>
      <option value="invoice_number">Invoice number</option>
      <option value="retailer_name">Customer name</option>
</select>
</span>

</div>

<!-- Edit Unpaid Shipment Form Modal -->
<div id="mod_unpaid_shipment" class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-body">
        <h1>Shipment {{shipment.invoice_number}} {{ shipment.retailer_name  }}</h1>
        <table>
          <tr>
            <td>Invoice Number</td>
            <td>{{shipment.invoice_number}}</td>
            <td>Order Received Date</td>
            <td>{{shipment.date_order_received}}</td>
          </tr>
          <tr>
            <td>VAT Rate (percent)</td>
            <td>{{shipment.vat_rate}}</td>
            <td>Invoice Sent Date</td>
            <td>{{shipment.date_invoice_sent}}</td>
          </tr>
          <tr>
            <td>Customer P.O. Number</td>
            <td>{{shipment.po_reference}}</td>
            <td>Despatched Date</td>
            <td>{{shipment.date_dispatched}}</td>
          </tr>
          <tr>
            <td>Customer Shipping Provider</td>
            <td>{{shipment.shipping_provider}}</td>
            <td>Payment Due Date</td>
            <td>{{shipment.date_payment_reminder}}</td>
          </tr>
          <tr>
            <td>Customer Shipping Ac.</td>
            <td>{{shipment.shipping_provider_ac_no}}</td>
            <td>Shipping Type</td>
            <td>{{shipment.shipping_provider_shipping_type}}</td>
          </tr>
          <tr>
            <td>Discount</td>
            <td>{{shipment.discount}}</td>
            <td>Tracking Info</td>
            <td><input v-model="shipment.tracking_info" type="text" class="form-control" placeholder="none"/></td>
          </tr>
          <tr>
            <td>Weight (kg)</td>
            <td>{{shipment.weight_kg}}</td>
          </tr>
          <tr>
            <td>Dimensions (cm)</td>
            <td>{{shipment.width_cm}} x  {{shipment.height_cm}} x {{shipment.depth_cm}}</td>
          </tr>
          <tr>
            <td>Notes</td>
            <td colspan="3"><textarea v-model="shipment.notes" rows="3" class="form-control" placeholder="Notes about this shipment go here"></textarea></td>
          </tr>
          <tr>
            <td>Invoice Comment</td>
            <td colspan="3">{{shipment.invoice_comment}}</td>
          </tr>
          <tr><td>
            <span v-if="has_shipment_products()" v-on:click="create_invoice(1)" class="badge badge-info">Invoice</span>
            <span v-on:click="make_unshipped('#mod_unpaid_shipment')" class="badge badge-info">Send Back to New Orders</span>
          </td></tr>
          <tr><td><button type="button" v-on:click="save_shipment('#mod_unpaid_shipment')" class="btn btn-primary">Save</button>
            <button type="button" v-on:click="cancel('#mod_unpaid_shipment')" class="btn btn-info">Cancel</button></td></tr>
        </table>
      </div>
    </div>
  </div>
</div>

<!-- Edit Paid Shipment Form Modal -->
<div id="mod_paid_shipment" class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-body">
        <h1>Shipment {{shipment.invoice_number}} {{ shipment.retailer_name  }}</h1>
        <table>
          <tr>
            <td>Invoice Number</td>
            <td>{{shipment.invoice_number}}</td>
            <td>Order Received Date</td>
            <td>{{shipment.date_order_received}}</td>
          </tr>
          <tr>
            <td>VAT Rate (percent)</td>
            <td>{{shipment.vat_rate}}</td>
            <td>Invoice Sent Date</td>
            <td>{{shipment.date_invoice_sent}}</td>
          </tr>
          <tr>
            <td>Customer P.O. Number</td>
            <td>{{shipment.po_reference}}</td>
            <td>Despatched Date</td>
            <td>{{shipment.date_dispatched}}</td>
          </tr>
          <tr>
            <td>Customer Shipping Provider</td>
            <td>{{shipment.shipping_provider}}</td>
            <td>Date Payed</td>
            <td>{{shipment.date_payment_received}}</td>
          </tr>
          <tr>
            <td>Customer Shipping Ac.</td>
            <td>{{shipment.shipping_provider_ac_no}}</td>
            <td>Actual Amount Collected</td>
            <td><input v-model="shipment.total_invoice_collected" type="text" class="form-control" placeholder="none"/></td>
          </tr>
          <tr>
            <td>Discount</td>
            <td>{{shipment.discount}}</td>
            <td>Account</td>
            <td>
              <select v-model="shipment.account_id">
                <option v-for="(account, index) in accounts" v-bind:value="account.id">{{account.name}}</option>
              </select>
            </td>
          </tr>
          <tr>
            <td>Weight (kg)</td>
            <td>{{shipment.weight_kg}}</td>
          </tr>
          <tr>
            <td>Dimensions (cm)</td>
            <td>{{shipment.width_cm}} x  {{shipment.height_cm}} x {{shipment.depth_cm}}</td>
          </tr>
          <tr>
            <td>Notes</td>
            <td colspan="3"><textarea v-model="shipment.notes" rows="3" class="form-control" placeholder="Notes about this shipment go here"></textarea></td>
          </tr>
          <tr>
            <td>Invoice Comment</td>
            <td colspan="3">{{shipment.invoice_comment}}</td>
          </tr>
          <tr>
            <td>Payment Received</td>
            <td><input v-model="shipment.date_payment_received" type="date" value="" class="form-control" placeholder="Date payment received"/></td>
          </tr>
          <tr><td><span v-if="has_shipment_products()" v-on:click="create_invoice(1)" class="badge badge-info">Invoice</span></td></tr>
          <tr><td><button type="button" v-on:click="save_shipment('#mod_paid_shipment')" class="btn btn-primary">Save</button>
            <button type="button" v-on:click="cancel('#mod_paid_shipment')" class="btn btn-info">Cancel</button></td></tr>
        </table>
      </div>
    </div>
  </div>
</div>

<!-- Shipment Info Form - Modal Part 1 -->
<div id="mod_shipment_new_1" class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-body">
        <h1>Shipment Info</h1>
        <table>
          <tr>
            <td>Shipment to</td>
            <td v-if="shipment.retailer_name">{{ shipment.retailer_name }} </td>
            <td v-else>
              <select v-model="shipment.retailer_id" @change="update_retailer_selection()">
                <option v-for="(retailer, index) in retailers" v-bind:value="retailer.id">{{retailer.name}}</option>
              </select>
            </td>
          </tr>
          <tr>
            <td colspan="4" v-if="shipment.retailer_id && shipment.retailer.owes_money"><b class='warning'>THIS CUSTOMER HAS OVERDUE INVOICES</b></td>
          </tr>
          <tr>
            <td>Invoice Number</td>
            <td v-if="shipment.retailer.is_sample">sample</td>
            <td v-if="shipment.invoice_number && !shipment.retailer.is_sample">{{ shipment.invoice_number }}</td>
            <td v-if="!shipment.invoice_number || shipment.retailer.is_sample">An invoice number will be allocated when you click <b>Save</b></td>
          </tr>
          <tr>
            <td>Order Received Date</td>
            <td><input v-model="shipment.date_order_received" type="date" value="" class="form-control" placeholder="Date the order was received"/></td>
          </tr>
          <tr>
            <td>VAT Rate (percent)</td>
            <td><input v-model="shipment.vat_rate" type="text" class="form-control" placeholder="none"/></td>
          </tr>
          <tr>
            <td>Cancelled</td>
            <td><input type="checkbox" v-model="shipment.is_cancelled"/></td>
          </tr>
          <tr>
            <td>Customer P.O. Number</td>
            <td><input v-model="shipment.po_reference" type="text" class="form-control" placeholder="none"/></td>
          </tr>
          <tr>
            <td>Retailer Notes</td>
              <td colspan="3">{{shipment.retailer.notes}} 
              <span v-if="shipment.retailer_id" v-on:click="open_retailer_tab(shipment.retailer_id)" class="badge badge-info">Edit</span>
            </td>
          </tr>
          <tr>
            <td>Shipment Notes</td>
            <td colspan="3"><textarea v-model="shipment.notes" rows="3" class="form-control" placeholder="Notes about this shipment go here"></textarea></td>
          </tr>
          <tr><td><button type="button" v-if="shipment.retailer_id" v-on:click="save_shipment_part_1" class="btn btn-primary">Save/Next</button>
              <button type="button" v-on:click="cancel('#mod_shipment_new_1')" class="btn btn-info">Back</button></td></tr>
        </table>

      </div>
    </div>
  </div>
</div>

<!-- Shipment Line Items Form Modal Part 2 -->
<div id="mod_shipment_new_2" class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-body">
        <h1>Shipment</h1>
        <table>
          <tr>
            <td>Shipment to</td>
            <td>{{ shipment.retailer_name }}</td>
          </tr>
          <tr>
            <td>Invoice Number</td>
            <td><input v-model="shipment.invoice_number" type="text" class="form-control" placeholder="none"/></td>
          </tr>
          <tr>
            <td colspan="2" v-if="shipment.retailer_id && shipment.retailer.owes_money"><b class='warning'>THIS CUSTOMER HAS OVERDUE INVOICES</b></td>
          </tr>
        </table>
        <h2>Lines</h2>
        <table>
        <tr>
          <th>Qty</th>
          <th>SKU</th>
          <th>Product</th>
          <th>Unit Price</th>
          <th>Extended Price</th>
          <th></th>
          <th></th>
        </tr>
        <tr v-for="(sp, index) in shipment.shipment_products">
          <td v-bind:class="{ warning: sp.qty > sp.product.qty }">{{sp.qty}}</td>
          <td v-bind:class="{ warning: sp.qty > sp.product.qty }">{{sp.product.sku}}</td>
          <td v-bind:class="{ warning: sp.qty > sp.product.qty }">{{sp.product.name}}</td>
          <td>{{sp.price.to_gbp()}}</td>
          <td>{{sp.line_total.to_gbp()}}</td>
          <td><span v-on:click="edit_sp(index)" class="badge badge-info">Edit</span></td>
          <td><span v-on:click="open_labels(index)" class="badge badge-info">Labels</span></td>
          <td><span v-on:click="open_product_tab(sp.product_id)" class="badge badge-info">Open Product (new tab)</span></td>
        </tr>
        </table>
        <table>
          <tr>
            <td>
              <select v-model="shipment_product.product_id">
                <option v-for="(product, index) in products" v-bind:value="product.id">{{product.name}} ({{product.qty}} ready)</option>
              </select>
            </td>
            <td>Qty</td>
            <td><input v-model="shipment_product.qty" type="text" class="form-control" placeholder="none"/></td>
            <td><button type="button" v-on:click="add_sp" class="btn btn-primary">+</button></td>
          </tr>
        </table>
        <button v-if="has_shipment_products() && ! all_shipable()" type="button" v-on:click="refresh_product_qty()" class="btn btn-success">Refresh</button>
        <button type="button" v-on:click="create_quote" class="btn btn-primary">Quote</button>
        <button v-if="has_shipment_products()" type="button" v-on:click="create_packing_list" class="btn btn-primary">Packing List</button>
        <button type="button" v-on:click="close_edit_view" class="btn btn-primary">Complete Later</button>
        <button v-if="has_shipment_products() && all_shipable()" type="button" v-on:click="ship_shipment(-1)" class="btn btn-success">Ship</button>
      </div>
    </div>
  </div>
</div>

<!-- Shipment Labels -->
<div id="mod_shipment_labels" class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-body">
        <h1>Label Printing</h1>
        <h2>Labels</h2>
        <table>
          <tr>
            <td>Label for</td>
            <td>{{shipment_product.product.name}}</td>
          </tr>
          <tr>
            <td>Qty ordered</td>
            <td>{{shipment_product.qty}}</td>
          </tr>
          <tr>
            <td>Qty to print ON the Label</td>
            <td><input v-model="new_label.qty_on_label" type="text" class="form-control" placeholder="none"/></td>
          </tr>
          <tr>
            <td><button type="button" v-on:click="print_label()" class="btn btn-primary">Print</button></td>
          </tr>
        </table>
      </div>
    </div>
  </div>
</div>



<!-- Reconcile Form Modal -->
<div id="mod_reconcile" class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-body">
        <h1>Reconcile Payment for Shipment to {{shipment.retailer_name}} on {{shipment.date_dispatched}}</h1>
        <table>
          <tr>
            <td>Invoice Number</td>
            <td>{{shipment.invoice_number}}</td>
          </tr>
          <tr>
            <td>Account</td>
            <td>
                <select v-model="shipment.account_id">
                  <option v-for="(account, index) in accounts" v-bind:value="account.id">{{account.name}}</option>
                </select>
            </td>
          </tr>
          <tr>
            <td>Payment Received</td>
            <td><input v-model="shipment.date_payment_received" type="date" value="" class="form-control" placeholder="Date payment received"/></td>
          </tr>
          <tr>
            <td>Invoice Amount</td>
            <td>{{invoice_amount_formated()}}</td>
          </tr>
          <tr>
            <td>Actual Amount Collected</td>
            <td><input v-model="shipment.total_invoice_collected" type="text" class="form-control" placeholder="none"/></td>
          </tr>
          <tr>
            <td>Notes</td>
            <td colspan="3"><textarea v-model="shipment.notes" rows="3" class="form-control" placeholder="Explain why the theiving bastards haven't paid in full."></textarea></td>
          </tr>
          <tr><td><button type="button" v-on:click="save_shipment('#mod_reconcile')" class="btn btn-primary">Save</button>
            <button type="button" v-on:click="cancel('#mod_reconcile')" class="btn btn-info">Cancel</button></td>
          </tr>
        </table>

      </div>
    </div>
  </div>
</div>

<!-- Mark Shipped Form Modal -->
<div id="mod_ship" class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-body">
        <h1>Mark Shipment Sent to {{shipment.retailer_name}}</h1>
        <table>
          <tr>
            <td>Invoice Number</td>
            <td>{{shipment.invoice_number}}</td>
            <td>Date Shipped</td>
            <td><input v-model="shipment.date_dispatched" type="date" value="" class="form-control" placeholder="Date payment received"/></td>
          </tr>
          <tr>
            <td>Invoice Sent</td>
            <td><input v-model="shipment.date_invoice_sent" type="date" value="" class="form-control" placeholder="Date the invoice was sent"/></td>
            <td>Payment Due</td>
            <td><input v-model="shipment.date_payment_reminder" type="date" value="" class="form-control" placeholder="Date payment due"/></td>
          </tr>
          <tr>
            <td>Shipping Provider</td>
            <td><input v-model="shipment.shipping_provider" type="text" placeholder="none"/></td>
            <td>Shipping Ac.</td>
            <td><input v-model="shipment.shipping_provider_ac_no" type="text" placeholder="none"/></td>
          </tr>
          <tr>
            <td>Shipping Type</td>
            <td><input v-model="shipment.shipping_provider_shipping_type" type="text"  placeholder="E.g. express"/></td>
            <td>Shipping Cost</td>
            <td><input v-model="shipment.shipping_cost" type="text"  placeholder="none"/></td>
          </tr>
          <tr>
            <td>Tracking Info</td>
            <td><input v-model="shipment.tracking_info" type="text" placeholder="none"/></td>
            <td>Weight (kg)</td>
            <td><input v-model="shipment.weight_kg" type="text"  placeholder="none"/></td>
          </tr>
          <tr v-if="shipment.retailer.pref_currency == 'USD'" >
            <td>This customer uses an invoice in USD calculated from product prices in GBP. This will be fixed when <b>Mark As Shipped</b> is Pressed.</td>
          </tr>
          <tr v-if="shipment.retailer.pref_currency == 'USD'" >
            <td>Exchange Rate</td>
            <td><input v-model="shipment.invoice_exch_rate" type="text"  placeholder="none"/></td>
          </tr>
          <tr>
          <td>Dimensions (cm)</td>
            <td colspan="3">
              <input v-model="shipment.width_cm" type="text"  size="12" placeholder="length (cm)"/>
              <input v-model="shipment.height_cm" type="text" size="12" placeholder="width (cm)"/>
              <input v-model="shipment.depth_cm" type="text" size="12"placeholder="height (cm)"/>
            </td>
          </tr>
          <tr>
            <td>Discount (£)</td>
            <td><input v-model="shipment.discount" type="text" class="form-control" placeholder="none"/></td>
          </tr>
          <tr>
            <td>Invoice Comment</td>
            <td colspan="3"><textarea v-model="shipment.invoice_comment" rows="2" class="form-control" placeholder="What you write here will appear on the invoice"></textarea></td>
          </tr>
          <tr>
            <td>Retailer Notes</td>
              <td colspan="3">{{shipment.retailer.notes}} 
              <span v-if="shipment.retailer_id" v-on:click="open_retailer_tab(shipment.retailer_id)" class="badge badge-info">Edit</span>
            </td>
          </tr>
          <tr>
            <td>Notes</td>
            <td colspan="3"><textarea v-model="shipment.notes" rows="2" class="form-control" placeholder="Notes about this shipment go here"></textarea></td>
          </tr>
          <tr><td colspan="4">
            <button type="button" v-on:click="save_but_dont_ship()" class="btn btn-success">Save</button> <!-- dont close window -->
            <button v-if="! shipment.shipping_cost" type="button" v-on:click="create_order_details" class="btn btn-primary">Order Detail</button>
            <button v-if="shipment.shipping_cost" type="button" v-on:click="create_invoice(1)" class="btn btn-primary">Invoice</button>
            <button type="button" v-on:click="save_but_dont_ship('#mod_ship')" class="btn btn-primary">Save and Close</button>
            <button type="button" v-on:click="ship_items_update" class="btn btn-primary">Mark as Shipped</button>
          </td></tr>
        </table>

      </div>
    </div>
  </div>
</div>

<!-- Edit Shipment Product Modal -->
<div id="mod_ship_prod" class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-body">
        <h1>Edit Line Item</h1>
        <table>
          <tr><td>{{shipment_product.product.name}}</td></tr>
          <tr>
            <td>Quantity</td>
            <td><input v-model="shipment_product.qty" type="text" class="form-control" placeholder="none"/></td>
          </tr>
          
          <tr><td><button type="button" v-on:click="delete_sp" class="btn btn-warning">Delete Line Item</button></td></tr>
          <tr><td><button type="button" v-on:click="add_sp" class="btn btn-primary">Save Change</button></td></tr>
          <tr><td><button type="button" v-on:click="cancel('#mod_ship_prod')" class="btn btn-info">Cancel</button></td></tr>
        </table>
      </div>
    </div>
  </div>
</div>


<!-- Orders List Table -->
<table>
<tr>
  <th v-if="filter_by_type == 'is_new'">Order Received</th>
  <th v-if="filter_by_type != 'is_new'">Invoice Date</th>
  <th>Invoice</th>
  <th>Retailer</th>
  <th>Invoice Amount</th>
  <th v-if="filter_by_type == 'is_paid'">Amount Collected</th>
  <th v-if="filter_by_type == 'is_unpaid'">Due Date</th>
</tr>
<tr v-for="(shipment, index) in filtered_results">
  <td v-if="filter_by_type == 'is_new'">{{ shipment.date_order_received }} </td>
  <td v-if="filter_by_type != 'is_new'">{{ shipment.date_invoice_sent }} </td>
  <td>{{ shipment.invoice_number }} </td>
  <td>{{ shipment.retailer_name }}</td>
  <td v-bind:class="{ warning: shipment.is_overdue }">{{ invoice_amount_formated(index) }}</td>
  <td v-if="filter_by_type == 'is_paid'">{{ shipment.total_invoice_collected ? shipment.total_invoice_collected.to_gbp() : '' }}</td>  
  <td v-if="filter_by_type == 'is_unpaid'">{{ shipment.date_payment_reminder }}</td>
  
  <td v-if="filter_by_type == 'is_new'"><span v-on:click="edit_shipment_1(index)" class="badge badge-info">Shipment Info</span></td>
  <td v-if="filter_by_type == 'is_new'"><span v-on:click="edit_shipment_2(index)" class="badge badge-info">Line Items</span></td>
  <td v-if="filter_by_type == 'is_unpaid'"><span v-on:click="edit_unpaid_shipment(index)" class="badge badge-info">Edit</span></td>
  <td v-if="filter_by_type == 'is_paid'"><span v-on:click="edit_paid_shipment(index)" class="badge badge-info">Edit</span></td>
  <td v-if="filter_by_type == 'is_unpaid'"><span v-on:click="reconcile_shipment(index)" class="badge badge-success">Reconcile</span></td>
  <td v-if="filter_by_type == 'is_new'"><span v-on:click="delete_shipment(index)" class="badge badge-danger">Delete</span></td>
  <td width="400">{{ shipment.notes }}</td>
  </tr>
</table>


</div>

<script>


window.onload = function () {
    var app = new Vue({
        el: '#app',
        data: {
          filter_by_type: 'is_new',
          num_days: 90,
          sort_by_field: 'updated_at',
          shipments: [],
          shipment: { // all so that hidden bits of UI dont crash through missing data
            id: null,
            invoice_number: '',
            invoice_amount: 0,
            total_invoice_amount: 99999999999,
            retailer_id: null,
            retailer: {pref_currency: '', pref_shipping_provider: '', pref_shipping_provider_ac_no: '', pref_shipping_provider_shipping_type: ''},
            date_order_received: new Date().toISOString().slice(0,10),
            vat_rate: 0,
            date_invoice_sent: '',
            po_reference: '',
            shipping_provider: '',
            shipping_provider_ac_no: '',
            shipping_provider_type: '',
            total_invoice_collected: '',
            discount: '',
            notes: '',
            shipment_products: [],
          },
          accounts: [],
          retailers: [],
          retailer: {},
          shipment_product: { // So UI doesnt crash
            shipment_id: null,
            product_id: null,
            qty: 0,
            price: null,
            product: {name: ''}
          },
          products: [],
          new_label: {qty_on_label: 0}
        },
        mounted: function() {
          var that;
          that = this;
          this.load_shipments(0, function() { that.shipment = that.filtered_results[0];});
          this.load_products();
          this.load_accounts();
          this.filter_shipments('is_new')
          $.ajax({
              url: '/retailers.json',
              success: function(res) {
                that.retailers = res;
              }
          });
        },
        methods: {
          load_shipments: function(days, callback) { 
            var that;
            that = this;
            if (days == 0) { // load at least 90 days worth
              if (this.num_days > 90) {
                days = this.num_days;
              }
              else {
                days = 90;
              } 
            }
            $.ajax({
              url: '/shipments.json?days=' + days,
              success: function(res) {
                that.shipments = res;
                if (callback) {
                  callback()
                }
              }
            });
          },
          load_products: function() {
            var that;
            that = this;
            $.ajax({
              url: '/products.json',
              success: function(res) {
                that.products = res;
              }
            });
          },
          load_accounts: function() {
            var that;
            that = this;
            $.ajax({
              url: '/accounts.json',
              success: function(res) {
                that.accounts = res;
              }
            });
          },
          load_shipment: function(shipment_id) {
            var that;
            that = this;
            $.ajax({
              url: '/shipments' + '/' + that.shipment.id + '.json',
              success: function(res) {
                that.shipment = res;
              }
            });
          },
          refresh_product_qty: function() {
            this.load_shipment(this.shipment.id); // reload shipment so should reload sp-s and hence each sp-s product
            this.load_products(); // so that if we now add other items product qtys are good
          },
          filter_shipments: function(filter_attribute) {
            this.filter_by_type = filter_attribute;
            this.shipment = this.filtered_results[0];
          },
          invoice_amount_formated: function(index) {
            // works with or without an index
            var s;
            if (index != null) {
              s = this.filtered_results[index];
            }
            else {
              s = this.shipment;
            }
            if (s.retailer.pref_currency == 'USD') {
              if (! s.invoice_exch_rate) {
                s.invoice_exch_rate = 1.3
              }
              return s.total_invoice_amount.to_usd() + " (" + (s.total_invoice_amount / s.invoice_exch_rate).to_gbp() + ")";
            }
            else {
              return s.total_invoice_amount.to_gbp();
            }
          },
          update_retailer_selection: function() {
            var that;
            that = this;
            // find the retailer
            this.retailer = this.retailers.filter(function (retailer) {
              return that.shipment.retailer_id == retailer.id;
            })[0];
            this.shipment.retailer = this.retailer; // change view to use the retailer on the shipment?? Must do because of loaded retailers rather than new ones
            this.shipment.shipping_provider = this.shipment.retailer.pref_shipping_provider;
            this.shipment.shipping_provider_ac_no = this.shipment.retailer.pref_shipping_provider_ac_no;
            this.shipment.shipping_provider_shipping_type = this.shipment.retailer.pref_shipping_provider_shipping_type;
          },
          new_shipment_1: function() {
            this.shipment = {
              id: null,
              invoice_number: '',
              retailer_id: null,
              date_order_received: new Date().toISOString().slice(0,10),
              vat_rate: 0,
              date_invoice_sent: '',
              po_reference: '',
              shipping_provider: '',
              shipping_provider_ac_no: '',
              shipping_provider_type: '',
              discount: '',
              notes: '',
              total_invoice_amount: 0,
              total_invoice_collected: '',
              shipment_products: [],
              retailer: {pref_currency: '', pref_shipping_provider: '', pref_shipping_provider_ac_no: '', pref_shipping_provider_shipping_type: ''},
            };
            $('#mod_shipment_new_1').modal('show')
          },
          edit_shipment_1: function(index) {
            this.shipment = this.filtered_results[index];
            $('#mod_shipment_new_1').modal('show');
          },
          edit_shipment_2: function(index) {
            this.shipment = this.filtered_results[index];
            $('#mod_shipment_new_2').modal('show');
          },
          open_labels: function(index) {
            this.shipment_product = this.shipment.shipment_products[index];
            $('#mod_shipment_labels').modal('show');
          },
          print_label: function() {
            window.open("/products/" + this.shipment_product.product_id + "/print_labels/" + this.new_label.qty_on_label,'name','width=600,height=400')
            this.cancel('#mod_shipment_labels')
          },
          edit_unpaid_shipment: function(index) {
            this.shipment = this.filtered_results[index];
            $('#mod_unpaid_shipment').modal('show');
          },
          edit_paid_shipment: function(index) {
            this.shipment = this.filtered_results[index];
            $('#mod_paid_shipment').modal('show');
          },
          save_shipment_part_1: function() {
            this.save_shipment('#mod_shipment_new_1');  
            $('#mod_shipment_new_2').modal('show')
          },
          close_edit_view: function() {
            $('#mod_shipment_new_2').modal('hide');
          },
          cancel: function(modal_to_close) {
            $(modal_to_close).modal('hide')
          },
          delete_shipment: function(index) {
            var that;
            that = this;
            var shipment_to_delete = this.filtered_results[index]
            if (confirm('Are you sure?')) {
              $.ajax({
                type: 'DELETE',
                url: '/shipments/' + shipment_to_delete.id + '.json',
                success: function(res) {
                  that.load_shipments(0);
                }
              });
            }
          },
          add_sp: function() {
            var that;
            that = this;
            this.shipment_product.shipment_id = this.shipment.id;
            $.ajax({
              type: 'POST',
              url: '/shipments/add_product',
              data: {shipment_product: this.shipment_product},
              success: function(res) {
                that.load_shipment(that.shipment.id);
                $('#mod_ship_prod').modal('hide');
              }
            });
          },
          delete_sp: function() {
            var that;
            that = this;
            if (confirm("Are you sure?")) {
              $.ajax({
                type: 'GET',
                url: '/shipments/delete_shipment_line?shipment_product_id=' + this.shipment_product.id,
                success: function(res) {
                  that.load_shipment(that.shipment.id);
                  $('#mod_ship_prod').modal('hide');
                }
              });
            }
          },
          edit_sp: function(index) {
            this.shipment_product = this.shipment.shipment_products[index];
            $('#mod_ship_prod').modal('show');
          },
          create_invoice: function(pages) {
            window.open("/shipments/invoice/" + this.shipment.invoice_number + "?id=" + this.shipment.id + "&pages=" + pages, '_blank')
          },
          create_packing_list: function() {
            window.open("/shipments/packing_list/" + this.shipment.invoice_number + "?id=" + this.shipment.id, '_blank')
          },
          create_quote: function() {
            window.open("/shipments/quote/" + this.shipment.quotation_number + "?id=" + this.shipment.id, '_blank')
          },
          create_order_details: function() {
            window.open("/shipments/order_details/" + this.shipment.invoice_number + "?id=" + this.shipment.id, '_blank')
          },
          open_product_tab: function(product_id) {
            window.open("/products/" + product_id + "/edit", '_blank')
          },
          open_retailer_tab: function(retailer_id) {
            window.open("/retailers/" + retailer_id + "/edit", '_blank')
          },
          save_but_dont_ship: function(modal_to_close) {
            var that;
            that = this;
            let ship_date = this.shipment.date_dispatched;
            this.shipment.date_dispatched = null;
            this.save_shipment(modal_to_close, function() {that.shipment.date_dispatched = ship_date;});
          },
          save_shipment: function(modal_to_close, callback) {
            var that;
            that = this;
            var modal = modal_to_close;
            // delete computed attributes that cant be saved
            delete this.shipment.retailer_name;
            delete this.shipment.total_invoice_amount;
            delete this.shipment.is_amazon;
            delete this.shipment.is_new;
            delete this.shipment.is_unpaid;
            delete this.shipment.is_paid;
            delete this.shipment.is_overdue;
            delete this.shipment.shipment_products;
            // POST for a new, PUT for an update
            method = 'POST'
            url = '/shipments.json'
            
            if (this.shipment.id) { // update existing
              method = 'PUT';
              url = '/shipments/' + this.shipment.id + '.json';
            }
            $.ajax({
              type: method,
              url: url,
              data: {shipment: this.shipment},
              success: function(res) {
                that.load_shipments(0);
                that.shipment = res;
                that.shipment_product.shipment_id = that.shipment.id;
                if (modal) {
                  $(modal).modal('hide');
                }
                if (callback) {
                  callback();
                }
              }
            });
          },
          reconcile_shipment: function(index) {
            this.shipment = this.filtered_results[index];
            this.shipment.date_payment_received = today_as_string();
            this.shipment.total_invoice_collected = this.shipment.total_invoice_amount;
            $('#mod_reconcile').modal('show');
          },
          ship_shipment: function(index) {
            // works from list or detail views
            if (index != -1) {
              this.shipment = this.filtered_results[index];
            }
            this.shipment.date_dispatched = new Date().toISOString().slice(0,10);
            this.shipment.date_payment_reminder = new Date().addDays(7).toISOString().slice(0,10);
            $('#mod_ship').modal('show');
            $('#mod_shipment_new_2').modal('hide');
          },
          ship_items_update: function() {
            var that;
            that = this;
            this.save_shipment();
            $.ajax({
                type: 'GET',
                url: '/shipments/subtract_products?shipment_id=' + this.shipment.id,
                success: function(res) {
                  that.load_shipments(0);
                  that.load_products();
                  $('#mod_ship').modal('hide');
                }
            });
          },
          make_unshipped: function(modal_to_close) {
            var that;
            that = this;
            this.shipment.date_dispatched = null;
            this.save_shipment(modal_to_close);
            $.ajax({
                type: 'GET',
                url: '/shipments/un_subtract_products?shipment_id=' + this.shipment.id,
                success: function(res) {
                  that.load_shipments(0);
                  that.load_products();
                  $('#mod_ship').modal('hide');
                }
            });
          },
          has_shipment_products: function() {
            return (this.shipment.shipment_products && this.shipment.shipment_products.length > 0)
          },
          all_shipable: function() {
            var can_ship = true;
            this.shipment.shipment_products.forEach(function(sp) {
              if (sp.product.qty < sp.qty) {
                can_ship = false;
              }
            });
            return can_ship;
          },
          num_days_changed: function() {
            if (this.num_days > 90) {
              this.load_shipments(this.num_days);
            }
          }
        },
        computed: {
          filtered_results: function() {
            var that;
            that = this;
            let filtered = this.shipments.filter(function (shipment) {
              var today = new Date();
              var start_date = today.addDays(- parseInt(that.num_days)).toISOString()
              var in_date_range = (shipment.updated_at >= start_date)
              return shipment[that.filter_by_type] && in_date_range
            });
            let sorted = filtered.sort(function (a, b) {
              let inverted = 1;
              if (that.sort_by_field == 'updated_at') {
                inverted = -1;
              }
              if (a[that.sort_by_field] > b[that.sort_by_field]) {
                return 1 * inverted;
              }
              return -1 * inverted;
            });
            return sorted;
          }
        }
    })
}

</script>





